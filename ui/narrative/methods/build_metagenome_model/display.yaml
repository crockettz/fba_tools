#
# Define basic display information
#
name     : Build Metagenome Metabolic Model (v0.1)

tooltip  : |
    Generate a draft metabolic model based on an annotated genome.

screenshots :

    - build_metabolic_model_input.png
    - build_metabolic_model_output.png


#
# Define the set of other narrative methods that should be suggested to the user.
#
suggestions :
    apps:
        related :
            []
        next :
            []
    methods:
        related :
            []
        next :
            [gapfill_metabolic_model,run_flux_balance_analysis]


#
# Configure the display and description of the parameters
#
parameters :
    gapfill_model :
        ui-name : |
            Gapfill model?
        short-hint : |
            Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable it to produce biomass in a specified media.
        long-hint : |
            Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable it to produce biomass in a specified media.

    media_id :
        ui-name : |
            Gapfilling Media (defaults to complete media)
        short-hint : |
            Media specifies the set of chemical compounds organism can use for its growth. In this function, the media is used as the growth condition for gapfilling, if gapfilling is performed. If none is specified complete media is used.
        long-hint : |
            Media specifies the set of chemical compounds organism can use for its growth. In this function, the media is used as the growth condition for gapfilling, if gapfilling is performed. If none is specified complete media is used. The “Complete” media is an abstraction of what’s available in our biochemistry database. Every compound that can be transported into the extracellular compartment–or, in other words, for which a transport reaction is available–is used in the complete media. This list is built in real-time, meaning that whenever you run FBA with complete media, the available transporters are parsed from the media database–and is therefore not stored permanently in any media object in the workspace.
        placeholder : |
            Growth condition for gapfilling

    custom_template_id :
        ui-name : |
            Custom template
        short-hint : |
            Select custom template to use to build metagenome model
        long-hint : |
            Select custom template to use to build metagenome model
        placeholder : |
            Custom template (optional)
            
    gene_level_coverage :
        ui-name : |
            Gene level coverage
        short-hint : |
            Check this box if you want coverages computed by gene rather than contig - useful when mapping transcriptomic data
        long-hint : |
            Check this box if you want coverages computed by gene rather than contig - useful when mapping transcriptomic data
    
    fbamodel_output_id :
        ui-name : |
            Output model
        short-hint : |
            Enter a name for the metabolic model to be created
        long-hint : |
            Enter a name for the metabolic model to be created
        placeholder : |
            Output metabolic model name

    reads_refs :
        ui-name : |
            Reads for coverage
        short-hint : |
            Reads for computing coverage
        long-hint : |
            Reads for computing coverage


    input_ref :
        ui-name : |
            Input Annotated Metagenome Assembly
        short-hint : |
            An annotated metagenome assembly to construct a model from
        long-hint : |
            An annotated metagenome assembly to construct a model from
        placeholder : |
            Assembly or bins for modeling


icon: modelseed-teal.png

description : |

    <p>This app takes an annotated metagenome assembly object (output object produced from Annotate Metagenome Assembly and Re-annotate Metagenomes with RASTtk - v1.073 app - see https://narrative.kbase.us/#appcatalog/app/RAST_SDK/annotate_metagenome/beta) and produced a draft metabolic model that represents the overall physiology of the metagenome. The metabolic reactions are derived based on RAST annotations, where RAST functional roles are used as a controlled vocabulary to derive relevant biochemistry. Therefore, it is essential to have the RAST annotations populated prior to building a draft metagenome model. The metagenome model is a representation of all the metabolic pathways encoded by the genes of all microbial organisms (prokaryotes in this case) that may exist in the metagenome. Thus, a metabolic model always includes a stoichiometric matrix of metabolic reactions and their associated biochemical compounds. Models also include data specifying how each reaction depends upon the genes encoding it, called gene-protein-reaction (GPR) associations. The GPR associations in a model allow it to differentiate between cases where protein products from multiple genes form a complex to cooperatively catalyze a reaction, and cases where protein products from multiple genes can independently catalyze the same reaction. Finally, in general, models typically include a biomass objective function, which indicates the relative abundance of small molecule building blocks (e.g. amino acids, lipids, energy, cell-wall materials, quinones ) that a cell must produce from available nutrients to grow and survive. In the context of metagenome models, we use the same biomass components that are typically used for isolate specific models.<p/>
    <p>Optional Inputs:</p>
    <p>Reads Coverage: The app can optionally take the reads coverage and computes the coverages against the metagenome assembly, then stores the coverages in the model as reaction coverages and as contig coverages. This coverage information could be useful in downstream analysis apps that; where the metagenome is analyzed against the extracted bins, the coverage data would easily propagate onto individual bins identifying relative abundance of contigs (organisms) or metabolic pathways (at the reaction level).</p>
    <p>Gapfilling media and Gapfill model: Although this is an optional input it is set to be 'true' by default as be recommended to execute by default (Gapfill model checkbox). Typically the draft metabolic models are incomplete due to knowledge gaps. To simulate models (e.g.; run FBA for cell growth), the gaps need to be filled and complete. (Learn more about gap-filling please refer to  Gapfill Metabolic Model App.) The user has the option to un-check the Gapfilling option, where the resulting draft metagenome model is based solely on RAST annotations. Reactions to be used by gapfilling algorithm are selected from the Model SEED biochemistry database. This curated database contains mass and charge-balanced reactions, standardized to aqueous conditions at neutral pH. The Model SEED reaction database integrates biochemistry contained KEGG, MetaCyc, EcoCyc, Plant BioCyc, Plant Metabolic Networks, and Gramene.</p>
    <p><strong>Team members who developed & deployed algorithm in KBase:</strong>Chris Henry, Janaka Edirisinghe, Sam Seaver, Neal Conrad. For questions, please <a href="https://www.kbase.us/support/">contact us</a>.</p>

publications :
    -
        display-text: |
            [1] Henry CS, DeJongh M, Best AA, Frybarger PM, Linsay B, Stevens RL. High-throughput generation, optimization and analysis of genome-scale metabolic models. Nat Biotechnol. 2010;28: 977–982. doi:10.1038/nbt.1672
        link: https://www.ncbi.nlm.nih.gov/pubmed/20802497
